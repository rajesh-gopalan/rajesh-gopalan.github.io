geom_text(aes(y = job_id + 15,
label = job_id
)
) +
theme_bw()
############################################################
################## Jobs posted each month ##################
# Categorize posted dates into months
jobs$posted_month <- months(jobs$posted_dt)
# Table the counts of jobs posted per month
postedCount <- data.frame(aggregate(formula = job_id ~ posted_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
postedCount <- postedCount[order(match(postedCount$posted_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
postedCount$posted_month <- factor(postedCount$posted_month, as.character(postedCount$posted_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
pprint
############################################################
############################################################
## Setting up pretty printing features of the bar graphs: ##
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
geom_text(aes(y = job_id + 15,
label = job_id
)
) +
theme_bw()
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
geom_text(aes(y = job_id + 15,
label = job_id
)
) +
theme_bw()
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
geom_text(aes(y = job_id + 15,
label = job_id
)
) +
theme_bw()
View(bids)
View(postedCount)
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
jobs$posted_month <- months(jobs$posted_dt)
# Table the counts of jobs posted per month
postedCount <- data.frame(aggregate(formula = job_id ~ posted_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
postedCount <- postedCount[order(match(postedCount$posted_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
postedCount$posted_month <- factor(postedCount$posted_month, as.character(postedCount$posted_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
pprint
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
theme_bw()
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
jobs$booked_month <- months(jobs$booked_dt)
# Table the counts of jobs booked per month
bookedCount <- data.frame(aggregate(formula = job_id ~ booked_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
bookedCount <- bookedCount[order(match(bookedCount$booked_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
bookedCount$booked_month <- factor(bookedCount$booked_month, as.character(bookedCount$booked_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(bookedCount,
aes(x = booked_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs booked"
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
ggplot(bookedCount,
aes(x = booked_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs booked"
) +
geom_text(aes(y = bookedCount$job_id + 15,
label = bookedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
monthlyCustomers <- data.frame(jobs$user_id, jobs$booked_month)
monthlyCustomers <- monthlyCustomers[complete.cases(monthlyCustomers), ]
monthlyCustomers <- monthlyCustomers[order(match(monthlyCustomers$booked_month, month.name)), ]
remove(monthlyCustomers)
monthlyCustomers <- data.frame(jobs$user_id, jobs$booked_month)
View(monthlyCustomers)
monthlyCustomers <- monthlyCustomers[complete.cases(monthlyCustomers), ]
View(monthlyCustomers)
order(match(monthlyCustomers$booked_month, month.name))
match(monthlyCustomers$booked_month, month.name)
help(match)
order (monthlyCustomers$booked_month %in% month.name)
month.name
monthlyCustomers$booked_month
View(monthlyCustomers)
order (monthlyCustomers$jobs.booked_month %in% month.name)
monthlyCustomers <- monthlyCustomers[order(match(monthlyCustomers$jobs.booked_month, month.name)), ]
View(monthlyCustomers)
View(monthlyCustomers)
newCustomersEachMonth <- data.frame(aggregate(formula = jobs.user_id ~ jobs.booked_month,
data = monthlyCustomers,
FUN = "length"
)
)
View(newCustomersEachMonth)
remove(newCustomersEachMonth)
with(monthlyCustomers[monthlyCustomers$jobs.booked_month == "February", ], unique(jobs.user_id))
CustomersEachMonth <- data.frame(aggregate(formula = jobs.user_id ~ jobs.booked_month,
data = monthlyCustomers,
FUN = "length"
)
)
View(CustomersEachMonth)
with(monthlyCustomers[monthlyCustomers$jobs.booked_month == "March", ], unique(jobs.user_id))
with(monthlyCustomers[monthlyCustomers$jobs.booked_month == "April", ], unique(jobs.user_id))
View(monthlyCustomers)
CustomerEachMonth[duplicated(customerEachMonth[,customersEachMonth$jobs.booked_month])]
customersEachMonth[duplicated(customersEachMonth[,customersEachMonth$jobs.booked_month])]
remove(CustomersEachMonth)
customersEachMonth <- data.frame(aggregate(formula = jobs.user_id ~ jobs.booked_month,
data = monthlyCustomers,
FUN = "length"
)
)
customersEachMonth[duplicated(customersEachMonth[,customersEachMonth$jobs.booked_month])]
customersEachMonth[duplicated(customersEachMonth[,2])]
View(customersEachMonth)
View(monthlyCustomers)
monthlyCustomers[duplicated(monthlyCustomers[,monthlyCustomers$jobs.booked_month])]
monthlyCustomers[duplicated(monthlyCustomers[,2])]
monthlyCustomers[,2]
duplicated(monthlyCustomers[,2])
monthlyCustomers[duplicated(monthlyCustomers[,2]), ]
nrows(monthlyCustomers[duplicated(monthlyCustomers[,2]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[,2]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[,1]), ])
monthlyCustomers[duplicated(monthlyCustomers[,monthlyCustomers$jobs.job_id]), ]
monthlyCustomers[duplicated(monthlyCustomers[,monthlyCustomers$jobs.user_id]), ]
monthlyCustomers$jobs.user_id
monthlyCustomers[,monthlyCustomers$jobs.user_id]
monthlyCustomers[monthlyCustomers$jobs.user_id, ]
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id, ])
monthlyCustomers[duplicated(monthlyCustomers[monthlyCustomers$jobs.user_id,]), ]
nrow(monthlyCustomers[duplicated(monthlyCustomers[monthlyCustomers$jobs.user_id,]), ])
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id == "54d270d12e08b70233a6cab2"", ])
""
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id == "54d270d12e08b70233a6cab2, ])
""
""
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id == "54d270d12e08b70233a6cab2", ])
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id == "54c7a6c4c5f46ecd0f194f77", ])
nrow(monthlyCustomers[monthlyCustomers$jobs.user_id == "54dbd0824540f72617520f6d", ])
monthlyCustomers[monthlyCustomers$jobs.user_id == "54dbd0824540f72617520f6d", ]
monthlyCustomers[monthlyCustomers$jobs.user_id == "54d270d12e08b70233a6cab2", ]
monthlyCustomers[duplicated(monthlyCustomers[monthlyCustomers$jobs.user_id,]), ]
nrow(monthlyCustomers[duplicated(monthlyCustomers[monthlyCustomers$jobs.user_id,]), ])
anyDuplicated(monthlyCustomers$jobs.user_id)
unqiue(monthlyCustomers$jobs.user_id)
unqiue(monthlyCustomers$jobs.user_id)iq
unique(monthlyCustomers$jobs.user_id)iq
unique(monthlyCustomers$jobs.user_id)
length(unique(monthlyCustomers$jobs.user_id))
View(customersEachMonth)
nrow(monthlyCustomers[duplicated(monthlyCustomers[monthlyCustomers$jobs.user_id,]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[1,]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[,1]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[1]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[2]), ])
monthlyCustomers[1]
nrows(monthlyCustomers[1])
nrow(monthlyCustomers[1])
nrow(monthlyCustomers[2])
nrow(monthlyCustomers[duplicated(monthlyCustomers), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[1:2,]), ])
nrow(monthlyCustomers[duplicated(monthlyCustomers[,1:2]), ])
monthlyCustomers[duplicated(monthlyCustomers[,1:2]), ]
duplicated(monthlyCustomers[,1:2])
library(openxlsx)
library(ggplot2)
library(scales)
library(lubridate)
# Read in the XLSX
jobs <- read.xlsx(xlsxFile = "/Users/rajeshgopalan/Desktop/UpCounsel/Exercise/UpCounsel_Sql_Test_Data.xlsx",
sheet = "jobs",
detectDates = TRUE
)
# Take care of formatting dates
jobs$booked_dt <- convertToDate(jobs$booked_dt)
userCategory <- read.xlsx(xlsxFile = "/Users/rajeshgopalan/Desktop/UpCounsel/Exercise/UpCounsel_Sql_Test_Data.xlsx",
sheet = "user_category",
detectDates = TRUE
)
bids <- read.xlsx(xlsxFile = "/Users/rajeshgopalan/Desktop/UpCounsel/Exercise/UpCounsel_Sql_Test_Data.xlsx",
sheet = "bids",
detectDates = TRUE
)
############################################################
## Setting up pretty printing features of the bar graphs: ##
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
############################################################
################## Jobs posted each month ##################
# Categorize posted dates into months
jobs$posted_month <- months(jobs$posted_dt)
# Table the counts of jobs posted per month
postedCount <- data.frame(aggregate(formula = job_id ~ posted_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
postedCount <- postedCount[order(match(postedCount$posted_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
postedCount$posted_month <- factor(postedCount$posted_month, as.character(postedCount$posted_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
library(openxlsx)
library(ggplot2)
library(scales)
library(lubridate)
setwd("/Users/rajeshgopalan/Desktop/Rajehs/Work/Job Search/UpCounsel/Exercise/")
# Read in the XLSX
jobs <- read.xlsx(xlsxFile = "UpCounsel_Sql_Test_Data.xlsx",
sheet = "jobs",
detectDates = TRUE
)
# Take care of formatting dates
jobs$booked_dt <- convertToDate(jobs$booked_dt)
userCategory <- read.xlsx(xlsxFile = "UpCounsel_Sql_Test_Data.xlsx",
sheet = "user_category",
detectDates = TRUE
)
bids <- read.xlsx(xlsxFile = "UpCounsel_Sql_Test_Data.xlsx",
sheet = "bids",
detectDates = TRUE
)
############################################################
## Setting up pretty printing features of the bar graphs: ##
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
############################################################
################## Jobs posted each month ##################
# Categorize posted dates into months
jobs$posted_month <- months(jobs$posted_dt)
# Table the counts of jobs posted per month
postedCount <- data.frame(aggregate(formula = job_id ~ posted_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
postedCount <- postedCount[order(match(postedCount$posted_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
postedCount$posted_month <- factor(postedCount$posted_month, as.character(postedCount$posted_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(postedCount,
aes(x = posted_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_text(aes(y = postedCount$job_id + 15,
label = postedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
# Categorize booked dates into months
jobs$booked_month <- months(jobs$booked_dt)
# Table the counts of jobs booked per month
bookedCount <- data.frame(aggregate(formula = job_id ~ booked_month,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
bookedCount <- bookedCount[order(match(bookedCount$booked_month, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
bookedCount$booked_month <- factor(bookedCount$booked_month, as.character(bookedCount$booked_month))
# Plot a bar graph displaying the counts on top of each bar
ggplot(bookedCount,
aes(x = booked_month,
y = job_id
)
) +
labs (x = "Month",
y = "# of jobs booked"
) +
geom_text(aes(y = bookedCount$job_id + 15,
label = bookedCount$job_id
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
source("Rajesh_Gopalan_SQL_Project_converted_into_R.R")
getwd()
setwd("/Users/rajeshgopalan/Desktop/Rajesh/SQL Project/Exercise/")
source("Rajesh_Gopalan_SQL_Project_converted_into_R.R")
library(openxlsx)
library(ggplot2)
library(scales)
library(lubridate)
setwd("/Users/rajeshgopalan/Desktop/Rajesh/SQL Project/Exercise/")
# Read in the CSV files
jobs <- read.csv(file = "jobs.csv",
header = TRUE
)
# Take care of formatting dates
jobs$bookedDate <- convertToDate(jobs$bookedDate)
userCategory <- read.csv(file = "category.csv",
header = TRUE
)
bid <- read.csv(file = "bid.csv",
header = TRUE
)
library(openxlsx)
library(ggplot2)
library(scales)
library(lubridate)
setwd("/Users/rajeshgopalan/Desktop/Rajesh/SQL Project/Exercise/")
# Read in the CSV files
jobs <- read.csv(file = "jobs.csv",
header = TRUE
)
# Take care of formatting dates
jobs$bookedDate <- convertToDate(jobs$bookedDate)
userCategory <- read.csv(file = "category.csv",
header = TRUE
)
bid <- read.csv(file = "bid.csv",
header = TRUE
)
library(openxlsx)
library(ggplot2)
library(scales)
library(lubridate)
setwd("/Users/rajeshgopalan/Desktop/Rajesh/SQL Project/Exercise/")
# Read in the CSV files
jobs <- read.csv(file = "jobs.csv",
header = TRUE
)
# Take care of formatting dates
jobs$bookedDate <- convertToDate(jobs$bookedDate)
category <- read.csv(file = "category.csv",
header = TRUE
)
bid <- read.csv(file = "bid.csv",
header = TRUE
)
############################################################
## Setting up pretty printing features of the bar graphs: ##
pprint <- geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
############################################################
################## Jobs posted each month ##################
# Categorize posted dates into months
jobs$postedMonth <- months(jobs$postedDate)
# Table the counts of jobs posted per month
postedCount <- data.frame(aggregate(formula = jobID ~ postedMonth,
data = jobs,
FUN = "length"
)
)
# Re-order the months in calendar order
postedCount <- postedCount[order(match(postedCount$postedMonth, month.name)), ]
# Re-order the months in the order of appearance in the data.frame
postedCount$postedMonth <- factor(postedCount$postedMonth, as.character(postedCount$postedMonth))
# Plot a bar graph displaying the counts on top of each bar
ggplot(postedCount,
aes(x = postedMonth,
y = jobID
)
) +
labs (x = "Month",
y = "# of jobs posted"
) +
geom_text(aes(y = postedCount$jobID + 15,
label = postedCount$jobID
)
) +
geom_bar(stat = "identity",
fill = "blue",
width = 0.5
) +
theme_bw()
?months
?months()
View(jobs)
